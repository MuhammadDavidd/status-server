// Kode musik untuk AetherSMP - dibuat pada 15 Mei 2025
// Tambahkan kode ini di dalam tag <script> Anda

// Daftar lagu yang akan diputar (ganti URL dengan file musik Anda)
const musicTracks = [
  {
    title: "pigstep",
    artist: "Lena Raina",
    file: "1.mp3", // Ganti dengan URL lagu Anda
    cover: "disc.png" // Placeholder untuk cover lagu
  },
  {
    title: "Aku Dah Lupa",
    artist: "Lonte",
    file: "2.mp3", // Ganti dengan URL lagu Anda
    cover: "disc.png" // Placeholder untuk cover lagu
  },
  {
    title: "Adventure Time",
    artist: "AetherSMP",
    file: "https://example.com/music/adventure-time.mp3", // Ganti dengan URL lagu Anda
    cover: "/api/placeholder/100/100" // Placeholder untuk cover lagu
  }
];

// Buat Audio Player
let currentTrackIndex = 0;
let isPlaying = false;
let audio = new Audio();
audio.volume = 0.5; // Set volume awal (0.0 - 1.0)

// Fungsi untuk memuat lagu
function loadTrack(trackIndex) {
  if (trackIndex < 0) trackIndex = musicTracks.length - 1;
  if (trackIndex >= musicTracks.length) trackIndex = 0;
  
  currentTrackIndex = trackIndex;
  
  audio.src = musicTracks[currentTrackIndex].file;
  audio.load();
  
  updateMusicInfo();
  
  // Jika sebelumnya sedang diputar, langsung putar lagu yang baru
  if (isPlaying) {
    audio.play()
      .then(() => {
        isPlaying = true;
        updatePlayButton();
      })
      .catch(error => {
        console.error("Error memainkan lagu:", error);
        isPlaying = false;
        updatePlayButton();
      });
  }
}

// Fungsi untuk memperbarui tombol play/pause
function updatePlayButton() {
  const playPauseIcon = document.getElementById('play-pause-icon');
  if (playPauseIcon) {
    playPauseIcon.className = isPlaying ? 'fas fa-pause' : 'fas fa-play';
  }
  
  const musicControlButton = document.getElementById('music-play-btn');
  if (musicControlButton) {
    if (isPlaying) {
      musicControlButton.classList.add('music-playing');
      musicControlButton.classList.remove('music-paused');
    } else {
      musicControlButton.classList.add('music-paused');
      musicControlButton.classList.remove('music-playing');
    }
  }
}

// Fungsi untuk memperbarui info lagu yang sedang diputar
function updateMusicInfo() {
  const currentTrack = musicTracks[currentTrackIndex];
  const trackTitle = document.getElementById('music-title');
  const trackArtist = document.getElementById('music-artist');
  const trackCover = document.getElementById('music-cover');
  
  if (trackTitle) trackTitle.textContent = currentTrack.title;
  if (trackArtist) trackArtist.textContent = currentTrack.artist;
  if (trackCover) trackCover.src = currentTrack.cover;
  
  // Update judul di dokumen saat lagu berubah
  document.title = `${currentTrack.title} - AetherSMP`;
  
  // Perbarui progress bar
  updateProgress();
}

// Fungsi untuk memperbarui progress bar
function updateProgress() {
  const progressBar = document.getElementById('music-progress');
  const currentTimeElement = document.getElementById('current-time');
  const durationElement = document.getElementById('duration-time');
  
  if (!progressBar || !currentTimeElement || !durationElement) return;
  
  const currentTime = audio.currentTime;
  const duration = audio.duration || 0;
  
  // Format waktu (00:00)
  const formatTime = (timeInSeconds) => {
    const minutes = Math.floor(timeInSeconds / 60);
    const seconds = Math.floor(timeInSeconds % 60);
    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
  };
  
  // Update waktu
  currentTimeElement.textContent = formatTime(currentTime);
  durationElement.textContent = formatTime(duration);
  
  // Update progress bar
  const progressPercent = (currentTime / duration) * 100;
  progressBar.style.setProperty('--music-progress', `${progressPercent}%`);
}

// Fungsi untuk play/pause
function togglePlay() {
  if (isPlaying) {
    audio.pause();
    isPlaying = false;
  } else {
    audio.play()
      .then(() => {
        isPlaying = true;
      })
      .catch(error => {
        console.error("Error memainkan lagu:", error);
        isPlaying = false;
      });
  }
  
  updatePlayButton();
}

// Fungsi untuk lagu selanjutnya
function nextTrack() {
  loadTrack(currentTrackIndex + 1);
}

// Fungsi untuk lagu sebelumnya
function prevTrack() {
  loadTrack(currentTrackIndex - 1);
}

// Event listener untuk audio
audio.addEventListener('ended', () => {
  nextTrack(); // Putar lagu selanjutnya saat lagu selesai
});

audio.addEventListener('timeupdate', () => {
  updateProgress();
});

audio.addEventListener('error', (e) => {
  console.error("Error audio:", e);
  isPlaying = false;
  updatePlayButton();
});

// Buat elemen UI musik player
function createMusicPlayer() {
  // Cek apakah sudah ada player
  if (document.getElementById('music-player-container')) return;
  
  // Buat container untuk music player
  const musicPlayerContainer = document.createElement('div');
  musicPlayerContainer.id = 'music-player-container';
  musicPlayerContainer.className = 'music-player-container';
  
  // HTML untuk music player
  musicPlayerContainer.innerHTML = `
    <div class="music-player">
      <div class="music-player-collapsed" id="music-player-collapsed">
        <button id="music-play-btn" class="music-control-btn music-paused">
          <i id="play-pause-icon" class="fas fa-play"></i>
        </button>
        <div class="music-info-mini">
          <span id="music-title-mini">Musik AetherSMP</span>
        </div>
        <button id="music-expand-btn" class="music-expand-btn">
          <i class="fas fa-chevron-up"></i>
        </button>
      </div>
      
      <div class="music-player-expanded" id="music-player-expanded">
        <div class="music-header">
          <span>Music Player</span>
          <button id="music-collapse-btn" class="music-collapse-btn">
            <i class="fas fa-chevron-down"></i>
          </button>
        </div>
        
        <div class="music-cover-container">
          <img id="music-cover" src="/api/placeholder/100/100" alt="Music Cover">
        </div>
        
        <div class="music-info">
          <h3 id="music-title">Judul Lagu</h3>
          <p id="music-artist">Artis</p>
        </div>
        
        <div class="music-progress-container">
          <span id="current-time">00:00</span>
          <div class="music-progress-bar">
            <div id="music-progress" class="music-progress-fill"></div>
          </div>
          <span id="duration-time">00:00</span>
        </div>
        
        <div class="music-controls">
          <button id="prev-btn" class="music-control-secondary-btn">
            <i class="fas fa-step-backward"></i>
          </button>
          <button id="music-play-btn-expanded" class="music-control-primary-btn">
            <i id="play-pause-icon-expanded" class="fas fa-play"></i>
          </button>
          <button id="next-btn" class="music-control-secondary-btn">
            <i class="fas fa-step-forward"></i>
          </button>
        </div>
        
        <div class="music-volume-container">
          <i class="fas fa-volume-up"></i>
          <input type="range" id="volume-slider" min="0" max="100" value="50">
        </div>
      </div>
    </div>
  `;
  
  // Tambahkan CSS
  const musicPlayerStyle = document.createElement('style');
  musicPlayerStyle.textContent = `
    .music-player-container {
      position: fixed;
      bottom: 20px;
      right: 20px;
      width: 300px;
      z-index: 1000;
      filter: drop-shadow(0 4px 16px rgba(0,0,0,0.4));
    }
    
    .music-player {
      backdrop-filter: blur(10px);
      border-radius: 20px;
      overflow: hidden;
      transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }
    
    .music-player-collapsed {
      display: flex;
      align-items: center;
      background: linear-gradient(135deg, rgba(34,211,238,0.7), rgba(167,139,250,0.7));
      padding: 12px 15px;
      border-radius: 50px;
      backdrop-filter: blur(10px);
      border: 1px solid rgba(255,255,255,0.1);
    }
    
    .music-player-expanded {
      display: none;
      background: linear-gradient(165deg, #252836, #1e1e2e);
      border-radius: 20px;
      padding: 15px;
      border: 1px solid rgba(255,255,255,0.08);
    }
    
    .music-control-btn {
      background: linear-gradient(135deg, #22d3ee, #a78bfa);
      border: none;
      width: 40px;
      height: 40px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      cursor: pointer;
      box-shadow: 0 4px 15px rgba(34,211,238,0.4);
      transition: all 0.3s ease;
      margin-right: 10px;
    }
    
    .music-control-btn:hover {
      transform: scale(1.05);
    }
    
    .music-playing {
      animation: pulse-play 2s infinite;
    }
    
    .music-paused {
      opacity: 0.9;
    }
    
    .music-info-mini {
      flex-grow: 1;
      margin: 0 10px;
      color: white;
      font-weight: 500;
      text-shadow: 0 1px 3px rgba(0,0,0,0.3);
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
    
    .music-expand-btn, .music-collapse-btn {
      background: transparent;
      border: none;
      color: white;
      cursor: pointer;
      padding: 5px;
      opacity: 0.8;
      transition: all 0.3s ease;
    }
    
    .music-expand-btn:hover, .music-collapse-btn:hover {
      opacity: 1;
      transform: translateY(-2px);
    }
    
    .music-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 15px;
      color: var(--text-secondary);
    }
    
    .music-cover-container {
      width: 100%;
      height: 150px;
      border-radius: 10px;
      overflow: hidden;
      margin-bottom: 15px;
      position: relative;
    }
    
    .music-cover-container::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(0deg, rgba(30,30,46,0.5), transparent);
    }
    
    .music-cover-container img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: all 0.5s ease;
    }
    
    .music-info {
      text-align: center;
      margin-bottom: 15px;
    }
    
    .music-info h3 {
      color: var(--text-primary);
      margin: 0 0 5px 0;
      font-size: 1.1em;
    }
    
    .music-info p {
      color: var(--text-secondary);
      margin: 0;
      font-size: 0.9em;
    }
    
    .music-progress-container {
      display: flex;
      align-items: center;
      margin-bottom: 20px;
      gap: 8px;
    }
    
    .music-progress-container span {
      font-size: 0.8em;
      color: var(--text-secondary);
      font-family: monospace;
    }
    
    .music-progress-bar {
      flex-grow: 1;
      height: 4px;
      background-color: rgba(255,255,255,0.1);
      border-radius: 2px;
      overflow: hidden;
      position: relative;
    }
    
    .music-progress-fill {
      height: 100%;
      width: var(--music-progress, 0%);
      background: linear-gradient(90deg, var(--accent-cyan), var(--accent-purple));
      border-radius: 2px;
      position: relative;
    }
    
    .music-progress-fill::after {
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      width: 8px;
      height: 8px;
      border-radius: 50%;
      background: white;
      transform: translate(50%, -25%);
      box-shadow: 0 0 10px rgba(255,255,255,0.7);
    }
    
    .music-controls {
      display: flex;
      justify-content: center;
      align-items: center;
      margin-bottom: 20px;
      gap: 15px;
    }
    
    .music-control-primary-btn {
      background: linear-gradient(135deg, var(--accent-cyan), var(--accent-purple));
      border: none;
      width: 50px;
      height: 50px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      color: white;
      cursor: pointer;
      box-shadow: 0 6px 20px rgba(34,211,238,0.3);
      transition: all 0.3s ease;
    }
    
    .music-control-primary-btn:hover {
      transform: scale(1.08);
      box-shadow: 0 8px 25px rgba(34,211,238,0.4);
    }
    
    .music-control-secondary-btn {
      background: rgba(255,255,255,0.1);
      border: none;
      width: 40px;
      height: 40px;
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      color: var(--text-primary);
      cursor: pointer;
      transition: all 0.3s ease;
    }
    
    .music-control-secondary-btn:hover {
      background: rgba(255,255,255,0.2);
      transform: scale(1.05);
    }
    
    .music-volume-container {
      display: flex;
      align-items: center;
      gap: 10px;
      color: var(--text-secondary);
    }
    
    .music-volume-container input {
      flex-grow: 1;
      -webkit-appearance: none;
      height: 4px;
      background: rgba(255,255,255,0.1);
      border-radius: 2px;
      overflow: hidden;
    }
    
    .music-volume-container input::-webkit-slider-thumb {
      -webkit-appearance: none;
      width: 12px;
      height: 12px;
      border-radius: 50%;
      background: var(--accent-cyan);
      cursor: pointer;
      box-shadow: -100px 0 0 100px var(--accent-cyan);
    }
    
    @keyframes pulse-play {
      0% { box-shadow: 0 0 0 0 rgba(34,211,238,0.7); }
      70% { box-shadow: 0 0 0 15px rgba(34,211,238,0); }
      100% { box-shadow: 0 0 0 0 rgba(34,211,238,0); }
    }
  `;
  
  // Tambahkan elemen ke body
  document.head.appendChild(musicPlayerStyle);
  document.body.appendChild(musicPlayerContainer);
  
  // Event listeners untuk komponen musik
  const musicExpandBtn = document.getElementById('music-expand-btn');
  const musicCollapseBtn = document.getElementById('music-collapse-btn');
  const musicCollapsed = document.getElementById('music-player-collapsed');
  const musicExpanded = document.getElementById('music-player-expanded');
  const playPauseBtn = document.getElementById('music-play-btn');
  const playPauseBtnExpanded = document.getElementById('music-play-btn-expanded');
  const prevBtn = document.getElementById('prev-btn');
  const nextBtn = document.getElementById('next-btn');
  const volumeSlider = document.getElementById('volume-slider');
  const playPauseIconExpanded = document.getElementById('play-pause-icon-expanded');
  
  // Toggle expanded/collapsed view
  musicExpandBtn.addEventListener('click', () => {
    musicCollapsed.style.display = 'none';
    musicExpanded.style.display = 'block';
  });
  
  musicCollapseBtn.addEventListener('click', () => {
    musicExpanded.style.display = 'none';
    musicCollapsed.style.display = 'flex';
  });
  
  // Play/Pause button
  playPauseBtn.addEventListener('click', togglePlay);
  playPauseBtnExpanded.addEventListener('click', togglePlay);
  
  // Previous/Next buttons
  prevBtn.addEventListener('click', prevTrack);
  nextBtn.addEventListener('click', nextTrack);
  
  // Volume slider
  volumeSlider.addEventListener('input', () => {
    const volume = volumeSlider.value / 100;
    audio.volume = volume;
  });
  
  // Update icon on expanded view when play state changes
  const updateExpandedIcon = () => {
    if (playPauseIconExpanded) {
      playPauseIconExpanded.className = isPlaying ? 'fas fa-pause' : 'fas fa-play';
    }
  };
  
  // Observer untuk sinkronisasi status ikon
  const observer = new MutationObserver((mutations) => {
    mutations.forEach((mutation) => {
      if (mutation.type === 'attributes' && mutation.attributeName === 'class') {
        updateExpandedIcon();
      }
    });
  });
  
  if (playPauseBtn) {
    observer.observe(playPauseBtn, { attributes: true });
  }
  
  // Muat lagu pertama
  loadTrack(0);
}

// Inisialisasi musik player saat halaman dimuat
document.addEventListener('DOMContentLoaded', () => {
  // Tunggu beberapa detik untuk memastikan UI utama sudah dimuat
  setTimeout(() => {
    createMusicPlayer();
  }, 1500);
});